name: Test Libraries on Nightlies

on:
  workflow_call:
    secrets:
      discord_webhook_url:
        required: true
      firebase_app_email:
        required: true
      firebase_app_pass:
        required: true
      firebase_app_apikey:
        required: true
      firebase_app_projectname:
        required: true


# We use the matrix.library entry to specify the dependency we want to use
# The key is used directly as the <pkg> in the `yarn add <pkg>` command.
jobs:
  runner-setup:
    runs-on: ubuntu-latest
    outputs:
      runners: '{"ios":"macos-latest", "android": "ubuntu-latest"}'
      libraries: ${{ steps.read-libraries.outputs.libraries }}
      library-data: ${{ steps.read-libraries.outputs.library-data }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Read libraries from JSON
        id: read-libraries
        run: |
          # Extract just the library names (keys) for the matrix
          echo "libraries=$(cat libraries.json | jq -c 'keys')" >> $GITHUB_OUTPUT
          # Keep the full library data for accessing commands and other metadata
          echo "library-data=$(cat libraries.json | tr -d '\n')" >> $GITHUB_OUTPUT

  test-library-on-nightly:
    name: "[${{ matrix.platform }}] ${{ matrix.library }}"
    needs: runner-setup
    runs-on: ${{ fromJSON(needs.runner-setup.outputs.runners)[matrix.platform] }}
    continue-on-error: true
    strategy:
      matrix:
        library: ${{ fromJSON(needs.runner-setup.outputs.libraries) }}
        platform: [ios, android]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: yarn
      - name: Test ${{ matrix.library }}
        id: run-test
        uses: ./.github/actions/test-library-on-nightly
        with:
          library-npm-package: ${{ fromJSON(needs.runner-setup.outputs.library-data)[matrix.library].installCommand }}
          platform: ${{ matrix.platform }}
      - name: Save outcome
        id: save-outcome
        if: always()
        run: |
          LIB_FOLDER=$(echo "${{matrix.library}}"  | tr ' ' '_' | tr '/' '_')
          echo "${{matrix.library}}: ${{steps.run-test.outcome}}: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" > "/tmp/$LIB_FOLDER-${{ matrix.platform }}-outcome"
          echo "lib_folder=$LIB_FOLDER" >> $GITHUB_OUTPUT
      - name: Upload Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.save-outcome.outputs.lib_folder }}-${{ matrix.platform }}-outcome
          path: /tmp/${{ steps.save-outcome.outputs.lib_folder }}-${{ matrix.platform }}-outcome

  collect-results:
    runs-on: ubuntu-latest
    needs: [test-library-on-nightly]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore outcomes
        uses: actions/download-artifact@v4
        with:
          pattern: '*-outcome'
          path: /tmp
      - name: Collect failures
        uses: actions/github-script@v6
        env:
          FIREBASE_APP_EMAIL: ${{ secrets.firebase_app_email }}
          FIREBASE_APP_PASS: ${{ secrets.firebase_app_pass }}
          FIREBASE_APP_APIKEY: ${{ secrets.firebase_app_apikey }}
          FIREBASE_APP_PROJECTNAME: ${{ secrets.firebase_app_projectname }}
        with:
          script: |
            const {collectResults} = require('./.github/workflow-scripts/collectNightlyOutcomes.js');
            await collectResults('${{secrets.discord_webhook_url}}');
