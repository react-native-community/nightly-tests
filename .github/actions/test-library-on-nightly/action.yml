name: test-library-on-nightly
description: Tests a library on a nightly
inputs:
  library-npm-package:
    description: The library npm package to add
    required: true
  platform:
    description: whether we want to build for iOS or Android
    required: true
  retry-count:
    description: Number of retry attempts for failed operations
    required: false
    default: '3'
  patch-file:
    description: Optional path to a patch file to apply after installing the library
    required: false
    default: ''
runs:
  using: composite
  steps:
    - name: Create new app
      shell: bash
      run: |
        cd /tmp
        npx @react-native-community/cli init RNApp --skip-install --version nightly
    
    
    - name: Apply patch if specified
      if: ${{ inputs.patch-file != '' }}
      shell: bash
      run: |
        if [ -f "$GITHUB_WORKSPACE/${{ inputs.patch-file }}" ]; then
          echo "Applying patch: ${{ inputs.patch-file }}"
          cd /tmp/RNApp
          node "$GITHUB_WORKSPACE/scripts/apply-patch.js" "$GITHUB_WORKSPACE/${{ inputs.patch-file }}"
          echo "✅ Patch applied successfully"
        else
          echo "⚠️  Warning: Patch file not found: ${{ inputs.patch-file }}"
          echo "Continuing without patch..."
        fi
    
    - name: Add library with retry
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: ${{ inputs.retry-count }}
        retry_wait_seconds: 15
        shell: bash
        command: |
          cd /tmp/RNApp
          yarn add ${{ inputs.library-npm-package }}
        on_retry_command: |
          echo "Cleaning up for yarn retry..."
          cd /tmp/RNApp
          rm -rf node_modules yarn.lock || true
          yarn cache clean || true

    # iOS
    - name: Setup xcode
      if: ${{ inputs.platform == 'ios' }}
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 16.4.0
    - name: Build iOS with retry
      if: ${{ inputs.platform == 'ios' }}
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 30
        max_attempts: ${{ inputs.retry-count }}
        retry_wait_seconds: 30
        shell: bash
        command: |
          cd /tmp/RNApp/ios
          bundle install
          RCT_USE_RN_DEP=1 RCT_USE_PREBUILT_RNCORE=1 bundle exec pod install
          xcodebuild build \
            -workspace RNApp.xcworkspace \
            -scheme RNApp \
            -sdk iphonesimulator
        on_retry_command: |
          echo "Cleaning up for iOS retry..."
          cd /tmp/RNApp/ios
          rm -rf Pods Podfile.lock build
          rm -rf ~/Library/Developer/Xcode/DerivedData/* || true

    # Android
    - name: Setup Java for Android
      if: ${{ inputs.platform == 'android' }}
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'zulu'
    - name: Build Android with retry
      if: ${{ inputs.platform == 'android' }}
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 30
        max_attempts: ${{ inputs.retry-count }}
        retry_wait_seconds: 30
        shell: bash
        command: |
          cd /tmp/RNApp/android
          ./gradlew assembleDebug
        on_retry_command: |
          echo "Cleaning up for Android retry..."
          cd /tmp/RNApp/android
          ./gradlew clean || true
          rm -rf build app/build .gradle || true
